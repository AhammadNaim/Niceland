[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="Shader" id=8]

code = "shader_type spatial;
render_mode blend_mix,depth_draw_always,cull_disabled,diffuse_burley,specular_schlick_ggx,vertex_lighting;

uniform sampler2D texture_wind;
uniform vec2 wind_vec = vec2(0.1, 0.0);
uniform float wind_bend = 5.0;

uniform vec4 albedo : hint_color;
//uniform sampler2D texture_albedo : hint_albedo;
//uniform float specular;
//uniform float metallic;
//uniform float roughness : hint_range(0,1);
//uniform float point_size : hint_range(0,128);
//uniform sampler2D texture_metallic : hint_white;
//uniform vec4 metallic_texture_channel;
//uniform sampler2D texture_roughness : hint_white;
//uniform vec4 roughness_texture_channel;
//uniform vec3 uv1_scale;
//uniform vec3 uv1_offset;
//uniform vec3 uv2_scale;
//uniform vec3 uv2_offset;


void vertex() {
//	ROUGHNESS=roughness;
//	UV=UV*uv1_scale.xy+uv1_offset.xy;
	
	vec4 wpos = WORLD_MATRIX * vec4(VERTEX, 1.0);
	vec2 wind_uv = wpos.xz / 64.0 + (wind_vec * -TIME);
	float wind = texture(texture_wind, wind_uv).r - 0.33;
	//vec3 wind_offset = vec3(wind_vec.x, 0.0, wind_vec.y);
	vec3 wind_offset = (inverse(WORLD_MATRIX) * vec4(wind_vec.x, 0.0, wind_vec.y, 0.0)).xyz;
	
	VERTEX += wind_offset * wind * VERTEX.y * wind_bend;
}




void fragment() {
//	vec2 base_uv = UV;
//	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb;
//	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
//	METALLIC = metallic_tex * metallic;
//	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
//	ROUGHNESS = roughness_tex * roughness;
//	SPECULAR = specular;
}
"

[sub_resource type="OpenSimplexNoise" id=10]

seed = 0
octaves = 2
period = 36.0
persistence = 0.5
lacunarity = 2.0

[sub_resource type="NoiseTexture" id=11]

flags = 7
width = 128
height = 128
seamless = true
as_normalmap = false
noise = SubResource( 10 )
_sections_unfolded = [ "noise" ]

[resource]

render_priority = 0
shader = SubResource( 8 )
shader_param/wind_vec = Vector2( 0.1, 0 )
shader_param/wind_bend = 5.0
shader_param/albedo = Color( 0.662745, 1, 0.505882, 1 )
shader_param/texture_wind = SubResource( 11 )
_sections_unfolded = [ "shader", "shader_param", "shader_param/texture_wind" ]

